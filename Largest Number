leetcode problem -179
from functools import cmp_to_key

class Solution:
    def largestNumber(self, nums: list[int]) -> str:
        # Custom comparator function
        def compare(x, y):
            # Compare concatenated result of x+y and y+x
            if x + y > y + x:
                return -1  # x should come before y
            elif x + y < y + x:
                return 1   # y should come before x
            else:
                return 0   # x and y are equal in terms of concatenation

        # Convert all integers to strings for easier comparison
        nums_str = list(map(str, nums))
        
        # Sort the numbers with the custom comparator
        nums_str.sort(key=cmp_to_key(compare))

        # Join the sorted numbers into a single string
        result = ''.join(nums_str)

        # Edge case: if the result starts with "0", return "0"
        return "0" if result[0] == '0' else result

# Test the function
solution = Solution()
nums = [3, 30, 34, 5, 9]
print(f"Largest number: {solution.largestNumber(nums)}")  # Expected output: "9534330"
