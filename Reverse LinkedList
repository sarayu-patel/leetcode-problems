leetcode problem-206
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        prev, current = None, head
        
        while current:
            next_node = current.next  
            current.next = prev       
            prev = current            
            current = next_node       
        
        return prev  
def print_linked_list(head: ListNode):
    current = head
    while current:
        print(current.val, end=" -> ")
        current = current.next
    print("None")

# Example usage
# Create a linked list: 1 -> 2 -> 3 -> 4 -> 5 -> None
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)
head.next.next.next = ListNode(4)
head.next.next.next.next = ListNode(5)

solution = Solution()
reversed_head = solution.reverseList(head)

# Print reversed linked list: 5 -> 4 -> 3 -> 2 -> 1 -> None
print("Reversed Linked List:")
print_linked_list(reversed_head)
